>>> from guppy import hpy
>>> h = hpy()
>>> print h.heap()

# Stopped at ~1,346,000 prefixes/routes in the 6447 routing table

Partition of a set of 7062407 objects. Total size = 229586848 bytes.
 Index  Count   %     Size   % Cumulative  % Kind (class / dict of class)
     0 1461560  21 97843744  43  97843744  43 list
     1 5297434  75 63569208  28 161412952  70 int
     2 114787   2 59689240  26 221102192  96 dict of __main__.CidrPrefix
     3 114787   2  3214036   1 224316228  98 __main__.CidrPrefix
     4  34652   0  2602728   1 226918956  99 str
     5  14664   0   576688   0 227495644  99 tuple
     6    200   0   343616   0 227839260  99 dict of module
     7   4052   0   275536   0 228114796  99 types.CodeType
     8    424   0   223744   0 228338540  99 dict (no owner)
     9   3786   0   212016   0 228550556 100 function
<205 more rows. Type e.g. '_.more' to view.>

# Reformatted and inclusion of avg object size (size/count)

#      Count  %        Size  %  Size/Count  Cum%  Kind (class/dict of class)
0  1,461,560 21  97,843,744 43       66.94    43  list
1  5,297,434 75  63,569,208 28       12.__    70  int (12 bytes)
2    114,787  2  59,689,240 26      520.__    96  dict of __main__.CidrPrefix
3    114,787  2   3,214,036  1       28.__    98  __main__.CidrPrefix
4     34,652  0   2,602,728  1       75.11    99  str
5     14,664  0     576,688  0       39.33    99  tuple
6        200  0     343,616  0     1718.08    99  dict of module
7      4,052  0     275,536  0       68.__    99  types.CodeType
8        424  0     223,744  0      527.70    99  dict (no owner)
9      3,786  0     212,016  0       56.__   100  function

# Analysis
##  list
    usage: as_path, CidrPrefix.as_paths
    count:  1,461,560 (21% of total object count)
    bytes: 97,843,744 (43% of total object bytes)
    size:       66.94 bytes (avergae bytes per object)
    explanation: count ~= # routes (as_path) + # prefixes (as_paths = [as_path])

##  int
    usage: as_path elements, prefix, prefix_len
    count:  5,297,434 (75% of total object count)
    bytes: 63,569,208 (28% of total object bytes)
    size:          12 bytes
    explanation: 5 int per CidrPrefix + ~3.5 

##  CidrPrefix (class + class.__dict__)
    count: 114,787 + 114,787 (2% + 2% of total object count)
    bytes: 3,214,036 + 59,689,240 (1% + 26% of total object bytes)
    size: 28 bytes (class) + 520 bytes (__dict__)

##  The rest is negligible -- < 1%
